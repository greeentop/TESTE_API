CREATE  PROCEDURE spGetRoteirizacaoDocumentos(   
 @COD_ROTEIRIZACAO	INT  
 ,@COD_FILIAIS_ROTE	INT		=  NULL
 ,@LENIENCIA		INT		= NULL  
   
)   
AS  

SET NOCOUNT ON  

/*

exec spGetRoteirizacaoDocumentos 37410 ,214
exec spGetRoteirizacaoDocumentos 37350

exec spGetRoteirizacaoDocumentos 37305 
exec spGetRoteirizacaoDocumentos 37265 
exec spGetRoteirizacaoDocumentos 37246 

*/

--DECLARE @COD_ROTEIRIZACAO     INT =  37410
--DECLARE @COD_FILIAIS_ROTE      INT =  null


-- CRIACAO TEMPORARIAS
BEGIN

	 
	IF (OBJECT_ID(('TEMPDB..#NOTAS_CONCAT_POR_CONHECIMENTO')))	IS NOT NULL BEGIN DROP TABLE #NOTAS_CONCAT_POR_CONHECIMENTO END
	IF (OBJECT_ID('TEMPDB..#DOCUMENTOS'))						IS NOT NULL	BEGIN DROP TABLE #DOCUMENTOS					END
	IF (OBJECT_ID('TEMPDB..#DOCUMENTOS_SELECIONADOS'))			IS NOT NULL	BEGIN DROP TABLE #DOCUMENTOS_SELECIONADOS		END


	CREATE TABLE #DOCUMENTOS (   
		 COD_ROTEIRIZACAO				INT  
		 , IDENT_VEICULOS				VARCHAR(8)  
		 , COD_DOCUMENTO				INT  
		 , IDENT_TIPO_DOCUMENTOS		CHAR(1)  
		 , PRIORIDADE					INT  
		 , COD_MAC						INT  
		 , IDENT_FILIAIS				CHAR(3)  
		 , SIGLA_FILIAIS				CHAR(3)  
		 , NR_DOCUMENTO					INT  
		 , IDENT_FILIAIS_ORIGEM_MAC		CHAR(3)  
		 , IDENT_FILIAIS_DESTINO_MAC	CHAR(3)  
		 , NR_MAC						INT  
		 , REMETENTE					VARCHAR(20)  
		 , DESTINATARIO					VARCHAR(20)  
		 , CNPJ_DESTINATARIO			VARCHAR(14)  
		 , ROTA							INT  
		 , CEP							INT  
		 , ENDERECO						VARCHAR(70)  
		 , NUMERO						INT  
		 , BAIRRO						VARCHAR(50)  
		 , CIDADE						VARCHAR(72)  
		 , DT_EMISSAO					DATETIME  
		 , DT_MAXIMA					DATETIME			
		 , QT_VOLUME					INT					
		 , PESO							INT  				
		 , PESO_REAL					INT  				
		 , VALOR						DECIMAL(10, 2)  	
		 , FRETE						DECIMAL(10, 2)  
		 , MENSAGEM						VARCHAR(1000)  
		 , ORDEM_ENTREGA				INT  
		 , NOTAS_FISCAIS				VARCHAR(MAX)  
		 , COD_BARRAS					VARCHAR(44) DEFAULT ''  
		 , ID_VOLUME					VARCHAR(10)  
		 , CNPJ_ENTREGA					VARCHAR(14)  
		 , COD_VIAGENS_ROTEIRIZACAO		BIGINT  
		 , COD_DESTINATARIO				INT  
		 , JANELA_ENTREGA				VARCHAR(100)  
		 , TEMPO_ENTREGA				INT  
		 , FL_AGENDAMENTO				BIT  
		 , FL_CARRO_DEDICADO			BIT  
		 , DS_RESTRICAO_VEICULO			VARCHAR(500)  
		 , OUTRAS_RESTRICOES			VARCHAR(500)  
		 , ZONA_RESTRICAO				BIT DEFAULT 0  
		 , END_ARM						VARCHAR(100)  
		 , COD_END_ARM					BIGINT  
		 , COD_UU_DOC					BIGINT  
		 , NR_COLETA					VARCHAR(12)  
		 , DT_SAIDA_PREV				VARCHAR(8)
		 , FIL_DEST						CHAR(7)
		 , FL_ROTEIRIZAR				BIT DEFAULT(1)
		 , FL_DOC_REMOV_VEICULO			BIT DEFAULT(0)
		 , COD_VEICULOS					INT
		 , LATITUDE						VARCHAR(30)
		 , LONGITUDE					VARCHAR(30)
		 )  

		CREATE INDEX i1 ON #DOCUMENTOS (COD_DOCUMENTO)
		CREATE INDEX REM ON #DOCUMENTOS (REMETENTE)
		CREATE INDEX DEST ON #DOCUMENTOS (DESTINATARIO)

END


-- SET VARIAVEIS 
--BEGIN

--	DECLARE @SQL				VARCHAR(512)  
--	DECLARE @CONDITION			VARCHAR(512)  = NULL

--	DECLARE @COD_FILIAIS		SMALLINT
--	DECLARE @DT_LIBERACAO_USO	DATETIME
--	DECLARE	@FL_INTEGRACAO_OTM	BIT

--	DECLARE @DW							AS TINYINT   
--	DECLARE @COD_FILIAL_ROTEIRIZACAO	SMALLINT  

--	SELECT  
--		@DW							= DATEPART(DW,DT_EMISSAO_MANIFESTOS)   
--		,@COD_FILIAL_ROTEIRIZACAO	= COD_FILIAIS  
--		,@COD_FILIAIS		= COD_FILIAIS
--		,@DT_LIBERACAO_USO	= DT_LIBERACAO_USO 
--	FROM TB_ROTEIRIZACAO (NOLOCK)   
--	WHERE COD_ROTEIRIZACAO = @COD_ROTEIRIZACAO  


--	SELECT  
--		@FL_INTEGRACAO_OTM = FL_ROTEIRIZACAO_OTM
--	FROM	TB_FILIAIS (NOLOCK)
--	WHERE	COD_FILIAIS = @COD_FILIAIS

--END


-- INSERIR REGISTRO NA TEMP DOCUMENTOS ONDE SERA TRATADO TODO RETORNO O NS
BEGIN

	INSERT #DOCUMENTOS (  
		COD_ROTEIRIZACAO  
		--,IDENT_VEICULOS  
		,COD_DOCUMENTO  
		,COD_MAC  
		,IDENT_TIPO_DOCUMENTOS  
		,PRIORIDADE  
		,MENSAGEM  
		,ORDEM_ENTREGA  
		,COD_VIAGENS_ROTEIRIZACAO  
		,FL_AGENDAMENTO 
		,FL_ROTEIRIZAR
		,FL_DOC_REMOV_VEICULO
		,COD_VEICULOS)  
	SELECT  DISTINCT
	   DR.COD_ROTEIRIZACAO  
	  --,CASE WHEN ISNUMERIC(VEI.IDENT_VEICULOS) = 1 THEN RTRIM(LTRIM(CONVERT(VARCHAR(7), CONVERT(INT, VEI.IDENT_VEICULOS))))  ELSE VEI.IDENT_VEICULOS  END IDENT_VEICULOS  
	  ,COD_DOCUMENTOS  
	  ,COD_MACS  
	  ,TD.IDENT_TIPO_DOCUMENTOS  
	  ,PRIORIDADE  
	  ,MENSAGEM_DOCUMENTOS_ROTEIRIZACAO  
	  ,ORDEM_ENTREGA  
	 ,DR.COD_VIAGENS_ROTEIRIZACAO  
	  ,0  
	  ,ISNULL(FL_ROTEIRIZAR,1)
	  ,ISNULL(FL_DOC_REMOV_VEICULO,0)
	  , isnull(DR.COD_VEICULOS,null) as COD_VEICULOS
	FROM TB_ROTEIRIZACAO rot (nolock)
		INNER JOIN TB_DOCUMENTOS_ROTEIRIZACAO DR (NOLOCK)  
			ON DR.COD_ROTEIRIZACAO  =  ROT.COD_ROTEIRIZACAO
		INNER JOIN TB_TIPO_DOCUMENTOS TD (NOLOCK)  
			ON  TD.COD_TIPO_DOCUMENTOS	= DR.COD_TIPO_DOCUMENTOS  
	WHERE ROT.COD_ROTEIRIZACAO  = @COD_ROTEIRIZACAO    
		AND (ROT.COD_FILIAIS   =  @COD_FILIAIS_ROTE  OR isnull(@COD_FILIAIS_ROTE,0)   =  0) 
END


update a set  
	a.IDENT_VEICULOS =  b.ident_veiculos 
from #DOCUMENTOS a 
	inner join TB_VEICULOS (nolock) b 
		on a.COD_VEICULOS =  b.cod_veiculos

	

--UPDATE TEMP #DOCUMENTO
BEGIN

	
	--UPDATE  #DOCUMENTOS	SET     
	--	CNPJ_ENTREGA = CLI.CNPJ_CLIENTES  
	--FROM    #DOCUMENTOS D  
	--	INNER   JOIN TB_COLETAS COL (NOLOCK)  
	--		ON      COL.COD_COLETAS = D.COD_DOCUMENTO   
	--	INNER   JOIN TB_CLIENTES CLI (NOLOCK)  
	--		ON      CLI.COD_CLIENTES = COL.COD_SOLICITANTE_CLIENTES   
	--WHERE   D.IDENT_TIPO_DOCUMENTOS = 'C'  
  

	--UPDATE  #DOCUMENTOS SET     
	--	ZONA_RESTRICAO = 1  
	--FROM    #DOCUMENTOS D  
	--INNER   JOIN TB_ZONAS_RESTRICAO_FAIXA_CEP ZR (NOLOCK)  
	--	ON      ZR.CEP_INICIAL <= D.CEP AND ZR.CEP_FINAL >= D.CEP  

	UPDATE  #DOCUMENTOS	SET     
		TEMPO_ENTREGA		= CASE WHEN D.IDENT_TIPO_DOCUMENTOS = 'E' THEN C.MEDIA_ENTREGA ELSE C.MEDIA_COLETA END,  
		FL_CARRO_DEDICADO	= C.FL_EXIGE_CARRO_DEDICADO_CLIENTES  
	FROM    #DOCUMENTOS D (NOLOCK)  
		INNER   JOIN TB_CLIENTES C (NOLOCK)  
			ON      C.COD_CLIENTES = D.COD_DESTINATARIO  

	UPDATE  #DOCUMENTOS	SET     
		FL_AGENDAMENTO = 1  
	FROM    #DOCUMENTOS D (NOLOCK)  
		INNER   JOIN TB_DESTINATARIOS_TAG DT (NOLOCK)  
			ON      DT.COD_CLIENTES = D.COD_DESTINATARIO  

			
	UPDATE D  SET  
	   NR_DOCUMENTO		= C.NR_IMPRESSO_CONHECIMENTOS  
	  , REMETENTE			= REM.NM_FANTASIA_CLIENTES  
	  , DESTINATARIO		= DES.NM_FANTASIA_CLIENTES  
	  , CNPJ_DESTINATARIO	= DES.CNPJ_CLIENTES  
	  , ROTA				= C.COD_ROTAS_DISTRIBUICAO  
	  , CEP					= C.CEP_ENTREGA_CONHECIMENTOS  
	  , ENDERECO			= C.END_ENTREGA_CONHECIMENTOS  
	  , NUMERO				= C.NR_ENTREGA_CONHECIMENTOS  
	  , BAIRRO				= C.BR_ENTREGA_CONHECIMENTOS  
	  , CIDADE				= C.CID_ENTREGA_CONHECIMENTOS  
	  , DT_EMISSAO			= C.DT_EMISSAO_CONHECIMENTOS  
	  , DT_MAXIMA			= C.DT_ENTREGA_MAXIMA_CONHECIMENTOS  
	  , QT_VOLUME			= C.QT_VOLUME_CONHECIMENTOS  
	  , PESO				= C.PESO_CALCULO_CONHECIMENTOS  
	  , PESO_REAL			= C.PESO_NOTA_CONHECIMENTOS  
	  , VALOR				= C.VL_MERCADORIA_CONHECIMENTOS  
	  , COD_BARRAS			= C.CODIGO_BARRAS  

	  , NR_COLETA			= COLFIL.IDENT_FILIAIS + '-' + LTRIM(COL.NR_COLETAS) 
	  , LATITUDE			= C.latitude
	  , LONGITUDE			= C.longitude
	FROM #DOCUMENTOS D  
		INNER JOIN TB_CONHECIMENTOS C (NOLOCK)  
			ON  C.COD_CONHECIMENTOS = D.COD_DOCUMENTO  
		INNER JOIN TB_CLIENTES REM (NOLOCK)  
			ON  REM.COD_CLIENTES = C.COD_REMETENTE_CLIENTES  
		INNER JOIN TB_CLIENTES DES (NOLOCK)  
			ON  DES.COD_CLIENTES = C.COD_DESTINATARIO_CLIENTES  
		INNER JOIN TB_COLETAS COL  (NOLOCK)
			ON  C.COD_COLETAS = COL.COD_COLETAS  
		INNER JOIN TB_FILIAIS COLFIL (NOLOCK)
			ON  COL.COD_FILIAIS = COLFIL.COD_FILIAIS  
	WHERE D.IDENT_TIPO_DOCUMENTOS = 'E'   
	--WHERE D.COD_TIPO_DOCUMENTOS =   1
	-- and d.COD_ROTEIRIZACAO  =  37410 




	UPDATE D	SET  
		IDENT_FILIAIS		= F.IDENT_FILIAIS  
		, SIGLA_FILIAIS		= F.SIGLA_FILIAIS  
		, NR_DOCUMENTO		= C.NR_COLETAS  
		, REMETENTE			= REM.NM_FANTASIA_CLIENTES  
		, DESTINATARIO		= DEST.NM_FANTASIA_CLIENTES  
		, ROTA				= C.COD_ROTAS_DISTRIBUICAO  
		, CEP				= C.CEP_COLETAS  
		, ENDERECO			= C.END_COLETAS  
		, NUMERO			= C.NR_NUMERO_COLETAS  
		, BAIRRO			= C.BR_COLETAS  
		, CIDADE			=  C.NM_CIDADE_COLETAS  
		, DT_EMISSAO		= C.DT_SOLICITACAO_COLETAS  
		, DT_MAXIMA			= C.DT_EFETUAR_COLETAS  
		, QT_VOLUME			= C.QT_VOLUME_INFORMADO_COLETAS  
		, PESO				= C.PESO_INFORMADO_COLETAS  
		, VALOR				= C.VL_NF_INFORMADO_COLETAS   
		, COD_BARRAS		= C.COD_COLETAS  
		, LATITUDE			= C.latitude
		, LONGITUDE			= C.longitude
	FROM #DOCUMENTOS D  
		INNER JOIN tb_coletas C (NOLOCK)  
			ON  C.COD_COLETAS = D.COD_DOCUMENTO  
		INNER JOIN TB_FILIAIS F (NOLOCK)  
			ON  F.COD_FILIAIS = C.COD_FILIAIS  
		INNER JOIN TB_CLIENTES REM (NOLOCK)  
			ON  REM.COD_CLIENTES = C.COD_SOLICITANTE_CLIENTES  
		INNER JOIN TB_CLIENTES DEST (NOLOCK)  
			ON  DEST.COD_CLIENTES = ISNULL(C.COD_CLIENTES, C.COD_SOLICITANTE_CLIENTES)  
		INNER	JOIN TB_CIDADES_FAIXA_CEP CFP
			ON	CFP.CEP_INICIAL_CIDADES_FAIXA_CEP <= C.CEP_COLETAS
			AND	CFP.CEP_FINAL_CIDADES_FAIXA_CEP >= C.CEP_COLETAS
			AND	CFP.FL_FAIXA_CEP_DUPLICADA = 0
		INNER	JOIN TB_CIDADES CID (NOLOCK)
			ON	CID.COD_CIDADES = CFP.COD_CIDADES
		INNER	JOIN TB_FILIAIS FIL_DEST (NOLOCK)
			ON FIL_DEST.COD_FILIAIS = CID.COD_FILIAIS
	WHERE D.IDENT_TIPO_DOCUMENTOS = 'C'  
	


	--update #DOCUMENTOS set 
	--	#DOCUMENTOS.DS_RESTRICAO_VEICULO = DBO.FN_RESTRICOES_VEICULOS(#DOCUMENTOS.COD_DESTINATARIO) 
	--FROM #DOCUMENTOS  
	

	----refazer
	--UPDATE  #DOCUMENTOS	SET 
	--	DS_RESTRICAO_VEICULO = SUBQUERY.DS_RESTRICAO_VEICULOS  
	--FROM	#DOCUMENTOS  
	--	INNER   JOIN (	SELECT  DISTINCT   
	--						COD_DESTINATARIO  
	--						,DBO.FN_RESTRICOES_VEICULOS(COD_DESTINATARIO) AS DS_RESTRICAO_VEICULOS  
	--					FROM    #DOCUMENTOS   
	--					) SUBQUERY  
	--		ON SUBQUERY.COD_DESTINATARIO = #DOCUMENTOS.COD_DESTINATARIO  


	--UPDATE  #DOCUMENTOS	SET     
	--	OUTRAS_RESTRICOES = CO.DS_CLIENTES_OUTRAS_RESTRICOES  
	--FROM    #DOCUMENTOS D  
	--	INNER   JOIN TB_CLIENTES_OUTRAS_RESTRICOES CO (NOLOCK)  
	--		ON      CO.COD_CLIENTES = D.COD_DESTINATARIO   

	--UPDATE  #DOCUMENTOS	SET     
	--	ID_VOLUME = SUBQUERY.ID_VOLUME  
	--FROM    #DOCUMENTOS D  
	--	INNER   JOIN (	SELECT  
	--						NF.DS_ID_VOLUME_NOTAS_FISCAIS AS ID_VOLUME
	--						,D.COD_DOCUMENTO  
	--					FROM    #DOCUMENTOS D  
	--						INNER   JOIN TB_CONHECIMENTOS_NOTAS_FISCAIS CNF (NOLOCK)  
	--							ON      CNF.COD_CONHECIMENTOS = D.COD_DOCUMENTO   
	--						INNER   JOIN TB_NOTAS_FISCAIS NF (NOLOCK)  
	--							ON      CNF.ID_NOTAS_FISCAIS = NF.ID_NOTAS_FISCAIS  
	--					GROUP   BY D.COD_DOCUMENTO, NF.DS_ID_VOLUME_NOTAS_FISCAIS   
	--				) SUBQUERY  
	--		ON SUBQUERY.COD_DOCUMENTO = D.COD_DOCUMENTO  --5segundos 



--UPDATE  #DOCUMENTOS	SET     
--	JANELA_ENTREGA = SUBQUERY.JANELA  
--FROM    #DOCUMENTOS D  
--	INNER   JOIN (	SELECT 
--						COD_CLIENTES  
--						, HR_INICIO_PERIODO_1 + '-' + HR_FINAL_PERIODO_1 + ' | ' + HR_INICIO_PERIODO_2 + '-' + HR_FINAL_PERIODO_2 + ' | ' + HR_INICIO_PERIODO_3 + '-' + HR_FINAL_PERIODO_3 AS JANELA  
--					FROM TB_CLIENTES_RESTRICAO_HORARIOS (NOLOCK)  
--					WHERE COD_TIPO_MOVIMENTACAO = 1   
--						AND COD_DIA_SEMANA = @DW
--				) SUBQUERY  
--		ON	SUBQUERY.COD_CLIENTES = D.COD_DESTINATARIO  
--WHERE   D.IDENT_TIPO_DOCUMENTOS = 'E'  


	--UPDATE  #DOCUMENTOS	SET     
	--	JANELA_ENTREGA = SUBQUERY.JANELA  
	--FROM    #DOCUMENTOS D  
	--	INNER   JOIN (	SELECT  
	--						COD_CLIENTES  
	--						, HR_INICIO_PERIODO_1 + '-' + HR_FINAL_PERIODO_1 + ' | ' + HR_INICIO_PERIODO_2 + '-' + HR_FINAL_PERIODO_2 + ' | ' + HR_INICIO_PERIODO_3 + '-' + HR_FINAL_PERIODO_3 AS JANELA  
	--					FROM    TB_CLIENTES_RESTRICAO_HORARIOS (NOLOCK)  
	--					WHERE COD_TIPO_MOVIMENTACAO = 2   
	--						AND COD_DIA_SEMANA = @DW  
	--				) SUBQUERY  
	--		ON  SUBQUERY.COD_CLIENTES = D.COD_DESTINATARIO  
	--WHERE   D.IDENT_TIPO_DOCUMENTOS = 'C'  


	--UPDATE #DOCUMENTOS	SET  
	--	COD_MAC = M.COD_MACS  
	--FROM #DOCUMENTOS D 
	--	INNER JOIN TB_MACS_CONHECIMENTOS MC (NOLOCK)  
	--		ON  MC.COD_CONHECIMENTOS = D.COD_DOCUMENTO 
	--			AND  D.IDENT_TIPO_DOCUMENTOS = 'E'  
	--	INNER JOIN TB_MACS M (NOLOCK)  
	--		ON  M.COD_MACS = MC.COD_MACS   
	--WHERE M.COD_FILIAIS_DESTINO = @COD_FILIAL_ROTEIRIZACAO	-- 4 segundos  

	--UPDATE D	SET  
	--	IDENT_FILIAIS_ORIGEM_MAC	= FO.IDENT_FILIAIS  
	--	, IDENT_FILIAIS_DESTINO_MAC = FD.IDENT_FILIAIS  
	--	, NR_MAC					= M.NR_MACS  
	--FROM #DOCUMENTOS D  
	--	INNER JOIN TB_MACS M (NOLOCK)  
	--		ON  M.COD_MACS = D.COD_MAC  
	--	INNER JOIN TB_FILIAIS FO (NOLOCK)  
	--		ON  FO.COD_FILIAIS = M.COD_FILIAIS_ORIGEM  
	--	INNER JOIN TB_FILIAIS FD (NOLOCK)  
	--		ON  FD.COD_FILIAIS = M.COD_FILIAIS_DESTINO  
	--WHERE D.COD_MAC IS NOT NULL  

	UPDATE D	SET 
		DT_SAIDA_PREV = CONVERT(VARCHAR(8),R.DT_SAIDA_PREVISTA_MANIFESTOS,03)
	FROM #DOCUMENTOS D
		INNER JOIN TB_ROTEIRIZACAO R (NOLOCK)
			ON	R.COD_ROTEIRIZACAO = D.COD_ROTEIRIZACAO
END


--/*******************************************************************************************
--	 CONCATENANDO PAULO FANTIN 20/10/2017 16:11 INICIO
--*******************************************************************************************/
--BEGIN

--	SELECT  DISTINCT
--		COD_DOCUMENTO ,
--		COALESCE((	SELECT 
--						CAST(O.NR_NOTAS_FISCAIS AS VARCHAR(10)) + ';' AS [text()]
--					FROM TB_CONHECIMENTOS_NOTAS_FISCAIS AS O (nolock)
--					WHERE O.COD_CONHECIMENTOS  = A.COD_DOCUMENTO
--					ORDER BY O.NR_NOTAS_FISCAIS
--					FOR XML PATH(''), TYPE).value('.[1]', 'VARCHAR(MAX)'), '')  AS NOTAS
--		INTO #NOTAS_CONCAT_POR_CONHECIMENTO
--	FROM #DOCUMENTOS A	(nolock)
--		INNER JOIN TB_CONHECIMENTOS_NOTAS_FISCAIS  B (nolock)
--			ON A.COD_DOCUMENTO   =  B.COD_CONHECIMENTOS
--	WHERE IDENT_TIPO_DOCUMENTOS = 'E'   
--		--AND COD_DOCUMENTO =  34875144
--	GROUP BY A.COD_DOCUMENTO
--		,B.NR_NOTAS_FISCAIS
--	ORDER BY A.COD_DOCUMENTO ASC  

--	UPDATE DS SET 
--			NOTAS_FISCAIS  =  NC.NOTAS
--	FROM #DOCUMENTOS   DS  (nolock)
--		INNER JOIN  	#NOTAS_CONCAT_POR_CONHECIMENTO NC (nolock)
--			ON DS.COD_DOCUMENTO  =  NC.COD_DOCUMENTO

--/*******************************************************************************************
--	CONCATENANDO PAULO FANTIN 20/10/2017 16:11 FINAL
--*******************************************************************************************/
--END

 --ORDENS
SELECT
	COD_ROTEIRIZACAO  
	, IDENT_VEICULOS  
	, NR_DOCUMENTO  
	, IDENT_TIPO_DOCUMENTOS  
	, ORDEM_ENTREGA  
	, DESTINATARIO  
	, REMETENTE  
	, ROTA  
	, CIDADE 
	, ENDERECO  
	 ,[NR_ENDERECO]	=	NUMERO
	, BAIRRO  
	, [DT_EMISSAO]	=	FORMAT(DT_EMISSAO ,'dd' )
	, [DT_MAXIMA]	=	FORMAT(DT_MAXIMA  ,'dd' )
	, QT_VOLUME  
	, PESO  
	, PESO_REAL  
	, VALOR  

	, COD_VEICULOS
	, COD_DOCUMENTO  
	, COD_BARRAS  
	, TEMPO_ENTREGA  
	, END_ARM  
	, NR_COLETA  
	, DT_SAIDA_PREV
	, FL_ROTEIRIZAR 
	, FL_DOC_REMOV_VEICULO
	, LATITUDE
	, LONGITUDE

	--, PRIORIDADE  
	--, '' DT_RETORNO_ROTEIRIZACAO
	--, IDENT_FILIAIS  
	--, SIGLA_FILIAIS  
	--, IDENT_FILIAIS_ORIGEM_MAC  
	--, IDENT_FILIAIS_DESTINO_MAC  
	--, NR_MAC  
	--, CEP  
	--, FIL_DEST 
	--, FRETE  
	--, MENSAGEM  
	--, 0 NOTAS_FISCAIS  
	--, ID_VOLUME  
	--, CNPJ_ENTREGA  
	--, COD_VIAGENS_ROTEIRIZACAO  
	--, JANELA_ENTREGA  
	--, FL_AGENDAMENTO  
	--, FL_CARRO_DEDICADO  
	--, DS_RESTRICAO_VEICULO  
	--, OUTRAS_RESTRICOES  
	--, ZONA_RESTRICAO  
FROM #DOCUMENTOS   --where COD_VEICULOS is not null
ORDER BY 
	IDENT_VEICULOS desc
	, ORDEM_ENTREGA 
	, ROTA  
	, BAIRRO  
	, CEP  
	, ENDERECO  
	, COD_DOCUMENTO 









